# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: CMake on multiple platforms

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: self-hosted

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false

      # Set up a matrix to run the following 3 configurations:
      # 1. <Windows, Release, latest MSVC compiler toolchain on the default runner image, default generator>
      # 2. <Linux, Release, latest GCC compiler toolchain on the default runner image, default generator>
      # 3. <Linux, Release, latest Clang compiler toolchain on the default runner image, default generator>
      #
      # To add more build types (Release, Debug, RelWithDebInfo, etc.) customize the build_type list.
      matrix:
        os: [macOS, Linux]
        build_type: [Release]
        c_compiler: [clang, gcc]
        include:
          - os: macOS
            c_compiler: clang
          - os: Linux
            c_compiler: gcc
            cpp_compiler: g++
        exclude:
          - os: macOS
            c_compiler: gcc
          - os: Linux
            c_compiler: clang

    steps:
    - uses: actions/checkout@v3

    - name: Set env variables
      if: ${{ matrix.os }} == "Linux"
      run: echo "VCPKG_FORCE_SYSTEM_BINARIES=1" >> $GITHUB_ENV

    - name: Test env variables
      if: ${{ matrix.os }} == "Linux"
      run: echo "VCPKG_FORCE_SYSTEM_BINARIES=${VCPKG_FORCE_SYSTEM_BINARIES}"

    - name: Run Python bootstrap
      shell: bash
      run: |
        cd ${{ github.workspace }} && ./bootstrap.sh

    - name: Run build script
      shell: bash
      run: |
        echo "current path = ${PWD}"
        cd ${{ github.workspace }} && source ./activate_venv.sh && ./build.sh -b release