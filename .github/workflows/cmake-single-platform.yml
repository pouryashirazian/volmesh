# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: CMake on a single platform

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v3

    - name: Set env variables
      run: echo "VCPKG_FORCE_SYSTEM_BINARIES=1" >> $GITHUB_ENV
    - name: Test env variables
      run: echo "VCPKG_FORCE_SYSTEM_BINARIES=${VCPKG_FORCE_SYSTEM_BINARIES}"

    - name: Run Python bootstrap
      shell: bash
      run: |
        cd ${{ github.workspace }} && ./bootstrap.sh

    - name: Run build script
      # Downloads all required software dependencies using vcpkg
      # ws=`echo ${{ github.workspace }} | sed -r 's~/~//~g'`
      shell: bash
      run: |
        echo "current path = ${PWD}"
        cd ${{ github.workspace }} && source ./activate_venv.sh && ./build.sh -b release